# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xxLRRSomdrsQ30Fr30fg5SvKwo_1xF-P
"""

import matplotlib.pyplot as plt

def plot_line(points):
    """
    Plot a line using Matplotlib.

    Args:
        points (list): List of points representing the line.
    """
    x_coords = [point[0] for point in points]
    y_coords = [point[1] for point in points]

    plt.plot(x_coords, y_coords, marker='o', color='blue')
    plt.xlabel("X-axis")
    plt.ylabel("Y-axis")
    plt.title("Bresenham's Line Drawing Algorithm")
    plt.grid(True)
    plt.show()

def bresenham_line_algorithm(start, end):
    """
    Bresenham's Line Drawing Algorithm.

    Args:
        start (tuple): Coordinates of the start point (x, y).
        end (tuple): Coordinates of the end point (x, y).
    """
    x1, y1 = start
    x2, y2 = end
    dx = abs(x2 - x1)
    dy = abs(y2 - y1)
    steep = dy > dx
    if steep:
        x1, y1 = y1, x1
        x2, y2 = y2, x2
        dx, dy = dy, dx
    if x1 > x2:
        x1, x2 = x2, x1
        y1, y2 = y2, y1
    d = 2 * dy - dx
    y = y1
    points = []
    for x in range(x1, x2 + 1):
        if steep:
            points.append((y, x))
        else:
            points.append((x, y))
        if d >= 0:
            y += 1 if y1 < y2 else -1
            d -= 2 * dx
        d += 2 * dy
    plot_line(points)

def main():
    print('\nBresenham Line Drawing Algorithm')

    # Test Cases
    start1, end1 = (1, 1), (8, 4)
    start2, end2 = (1, 1), (4, 8)

    print("Test Case 1:")
    print(f"Start Point: {start1}, End Point: {end1}")
    bresenham_line_algorithm(start1, end1)

    print("\nTest Case 2:")
    print(f"Start Point: {start2}, End Point: {end2}")
    bresenham_line_algorithm(start2, end2)

if __name__ == "__main__":
    main()